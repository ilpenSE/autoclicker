<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="interval_groupbox" xml:space="preserve">
    <value>Intervalle</value>
  </data>
  <data name="interval_millis" xml:space="preserve">
    <value>millisecondes</value>
  </data>
  <data name="opt_clicktype" xml:space="preserve">
    <value>Type de clic</value>
  </data>
  <data name="opt_mb_left" xml:space="preserve">
    <value>Gauche</value>
  </data>
  <data name="opt_mb_mid" xml:space="preserve">
    <value>Milieu</value>
  </data>
  <data name="opt_mb_right" xml:space="preserve">
    <value>Droite</value>
  </data>
  <data name="opt_gb" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="opt_lang" xml:space="preserve">
    <value>Langue</value>
  </data>
  <data name="opt_msbtn" xml:space="preserve">
    <value>Bouton de la souris</value>
  </data>
  <data name="opt_ct_double" xml:space="preserve">
    <value>Double</value>
  </data>
  <data name="opt_ct_quadruple" xml:space="preserve">
    <value>Quadruple</value>
  </data>
  <data name="opt_ct_single" xml:space="preserve">
    <value>Simple</value>
  </data>
  <data name="opt_ct_triple" xml:space="preserve">
    <value>Triple</value>
  </data>
  <data name="pos_current" xml:space="preserve">
    <value>Position actuelle</value>
  </data>
  <data name="pos_gb" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="pos_spec" xml:space="preserve">
    <value>Position spécifié</value>
  </data>
  <data name="rep_forever" xml:space="preserve">
    <value>Répéter jusqu'à l'arrêt</value>
  </data>
  <data name="rep_gb" xml:space="preserve">
    <value>Répéter</value>
  </data>
  <data name="rep_times" xml:space="preserve">
    <value>fois</value>
  </data>
  <data name="start" xml:space="preserve">
    <value>COMMENCER</value>
  </data>
  <data name="stop" xml:space="preserve">
    <value>ARRÊT</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Auto Clicker</value>
  </data>
  <data name="err_invalid_pos" xml:space="preserve">
    <value>Veuillez saisir une position valide.</value>
  </data>
  <data name="err_title" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="settings_title" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="wrn_title" xml:space="preserve">
    <value>Avertissement</value>
  </data>
  <data name="wrn_invalidhtk" xml:space="preserve">
    <value>Réglage invalide de la touche de raccourci. Par défaut, F6.</value>
  </data>
  <data name="wrn_cantcreatedef" xml:space="preserve">
    <value>Vous ne pouvez pas créer de macro nommée « DEFAULT ».</value>
  </data>
  <data name="select" xml:space="preserve">
    <value>SÉLECTIONER</value>
  </data>
  <data name="create" xml:space="preserve">
    <value>CRÉER</value>
  </data>
  <data name="createmacro_title" xml:space="preserve">
    <value>Créer une nouvelle macro</value>
  </data>
  <data name="info" xml:space="preserve">
    <value>Informations</value>
  </data>
  <data name="info_selectmacro" xml:space="preserve">
    <value>Veuillez sélectionner une macro.</value>
  </data>
  <data name="wrn_cantdeldef" xml:space="preserve">
    <value>Vous ne pouvez pas supprimer les paramètres par défaut.</value>
  </data>
  <data name="wrn_selectmacrodel" xml:space="preserve">
    <value>Veuillez sélectionner une macro à supprimer.</value>
  </data>
  <data name="ask_delmacro" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer la macro {selectedName} ?</value>
  </data>
  <data name="ask_confirmdel" xml:space="preserve">
    <value>Confirmer la suppression</value>
  </data>
  <data name="ask_enternewmacro" xml:space="preserve">
    <value>Saisissez un nouveau nom de macro :</value>
  </data>
  <data name="ask_savemacrotitle" xml:space="preserve">
    <value>Enregistrer la macro</value>
  </data>
  <data name="activemacro" xml:space="preserve">
    <value>Macro active: {_activeMacroName} (Appuyez pour modifier)</value>
  </data>
  <data name="activemacro_unsaved" xml:space="preserve">
    <value>Macro active: {_activeMacroName}* (Appuyez pour modifier)</value>
  </data>
  <data name="wrn_cantfounddef" xml:space="preserve">
    <value>La macro par défaut est introuvable, nous en ajoutons une.</value>
  </data>
  <data name="err_nullnamecreatemacro" xml:space="preserve">
    <value>Veuillez saisir un nom pour la macro.</value>
  </data>
  <data name="lblname" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="lbldesc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="wrn_canteditdef" xml:space="preserve">
    <value>Vous ne pouvez pas modifier les paramètres par défaut.</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>SUPPRIMER</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>ANNULER</value>
  </data>
  <data name="macrolist" xml:space="preserve">
    <value>Liste des macros</value>
  </data>
  <data name="macroselectiontitle" xml:space="preserve">
    <value>Sélection de macro</value>
  </data>
  <data name="rename" xml:space="preserve">
    <value>Renommer</value>
  </data>
  <data name="editdesc" xml:space="preserve">
    <value>Modifier la description</value>
  </data>
  <data name="err_emptynamedesc" xml:space="preserve">
    <value>Le nom ou la description ne peut pas être vide.</value>
  </data>
  <data name="err_macroexists" xml:space="preserve">
    <value>Une macro portant ce nom existe déjà.</value>
  </data>
  <data name="nodesc" xml:space="preserve">
    <value>Aucune description</value>
  </data>
  <data name="htk" xml:space="preserve">
    <value>Le Raccourci</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>ENREGISTRER</value>
  </data>
  <data name="discard" xml:space="preserve">
    <value>ANNULER</value>
  </data>
  <data name="createdmacro" xml:space="preserve">
    <value>Macro créée</value>
  </data>
  <data name="defaultmacro" xml:space="preserve">
    <value>Par défaut</value>
  </data>
  <data name="interval_info" xml:space="preserve">
    <value>1 seconde = 1000 millisecondes</value>
  </data>
  <data name="opt_cmod" xml:space="preserve">
    <value>Mode de clic</value>
  </data>
  <data name="opt_cm_click" xml:space="preserve">
    <value>Clic</value>
  </data>
  <data name="opt_cm_hold" xml:space="preserve">
    <value>Maintenir</value>
  </data>
  <data name="holddur_groupbox" xml:space="preserve">
    <value>Durée de maintien</value>
  </data>
  <data name="err_existmacroname" xml:space="preserve">
    <value>Une macro portant ce nom existe déjà!</value>
  </data>
  <data name="err_incompatibleversion" xml:space="preserve">
    <value>Version incompatible: #VER</value>
  </data>
</root>