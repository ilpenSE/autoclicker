<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPDwwDDw8MAw8PDGcPDw2vDw8O8w8PD5sPD
        w/LDw8Puw8PD7sPDw/LDw8Pmw8PDvMPDw2vDw8MZw8PDAMPDwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDw8MAw8PDBMPDw1LDw8PHw8PD0sPD
        w5fDw8Ngw8PDQsPDwzXDw8M1w8PDQsPDw2DDw8OXw8PD0sPDw8fDw8NSw8PDBMPDwwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw8PDAMPDwwTDw8Nww8PD4MPD
        w4LDw8Mdw8PDAcPDwwAAAAAAAAAAAAAAAAAAAAAAw8PDAMPDwwHDw8Mdw8PDgsPDw+DDw8Nww8PDBMPD
        wwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPDwwDDw8MAw8PDVsPD
        w+DDw8Ncw8PDAsPDwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPDwwDDw8MCw8PDXMPD
        w+DDw8NWw8PDAMPDwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw8PDAMPD
        wxjDw8PKw8PDgMPDwwHDw8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPD
        wwDDw8MBw8PDgMPDw8rDw8MYw8PDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPD
        wwDDw8MAw8PDYsPDw9PDw8Mew8PDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMPDwwDDw8Mew8PD08PDw2LDw8MAw8PDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAw8PDAMPDwwLDw8Onw8PDl8PDwwDDw8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAw8PDAMPDwwDDw8OXw8PDp8PDwwLDw8MAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADDw8MAw8PDD8PDw8nDw8Nlw8PDAMPDwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDw8MAw8PDAMPDw2XDw8PJw8PDD8PDwwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPDwwDDw8MXw8PD0sPDw07Dw8MAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDw8MAw8PDTsPDw9LDw8MXw8PDAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw8PDAMPDwxfDw8PSw8PDTMPDwwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPDwwDDw8NMw8PD0sPD
        wxfDw8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDw8MAw8PDF8PDw9LDw8NMw8PDAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw8PDAMPD
        w0zDw8PSw8PDF8PDwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPDwwDDw8MXw8PD0sPD
        w0zDw8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADDw8MAw8PDTMPDw9LDw8MXw8PDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw8PDAMPD
        wxfDw8PSw8PDTMPDwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMPDwwDDw8NMw8PD0sPDwxfDw8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADDw8MAw8PDF8PDw9LDw8NMw8PDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAw8PDAMPDw0zDw8PSw8PDF8PDwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMPDwwDDw8MXw8PD0sPDw0zDw8MAAAAAAAAAAAAAAAAAAAAAAAAAAADDw8MAw8PDCMPD
        wwjDw8MAAAAAAAAAAAAAAAAAAAAAAAAAAADDw8MAw8PDTMPDw9LDw8MXw8PDAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAw8PDAMPDwxfDw8PSw8PDTMPDwwAAAAAAAAAAAAAAAAAAAAAAw8PDAMPD
        wwDDw8N2w8PDdsPDwwDDw8MAAAAAAAAAAAAAAAAAAAAAAMPDwwDDw8NMw8PD0sPDwxfDw8MAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDw8MAw8PDF8PDw9LDw8NMw8PDAAAAAAAAAAAAAAAAAAAA
        AADDw8MAw8PDAMPDw6DDw8Ogw8PDAMPDwwAAAAAAAAAAAAAAAAAAAAAAw8PDAMPDw0zDw8PSw8PDF8PD
        wwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPDwwDDw8MXw8PD0sPDw0zDw8MAAAAAAAAA
        AAAAAAAAAAAAAMPDwwDDw8MAw8PDoMPDw6DDw8MAw8PDAAAAAAAAAAAAAAAAAAAAAADDw8MAw8PDTMPD
        w9LDw8MXw8PDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw8PDAMPDwxfDw8PSw8PDTMPD
        wwAAAAAAAAAAAAAAAAAAAAAAw8PDAMPDwwDDw8Ogw8PDoMPDwwDDw8MAAAAAAAAAAAAAAAAAAAAAAMPD
        wwDDw8NMw8PD0sPDwxfDw8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDw8MAw8PDF8PD
        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
        Hx/8eB4//Dw8P/4eeH/+BmB//wAA///AA/8=
</value>
  </data>
</root>